// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHome.Data;

namespace SmartHome.Migrations
{
    [DbContext(typeof(SmartHomeContext))]
    [Migration("20220517034703_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "04ff9086-8225-424a-8620-ef1a58ae853c",
                            ConcurrencyStamp = "83e57d03-6311-4247-acbf-7339051fed15",
                            Name = "Dashboard Admin",
                            NormalizedName = "DASHBOARD ADMIN"
                        },
                        new
                        {
                            Id = "60f49c54-5108-4bc1-963c-2534383a8401",
                            ConcurrencyStamp = "02150d6d-25c1-42ee-831b-f14c9407bc11",
                            Name = "Control Users",
                            NormalizedName = "CONTROL USERS"
                        },
                        new
                        {
                            Id = "e3108378-4aa3-4bd0-87f7-854c67b723ec",
                            ConcurrencyStamp = "f5107123-ba80-4c6f-b83a-45b8e054cd26",
                            Name = "Main Systems",
                            NormalizedName = "MAIN SYSTEMS"
                        },
                        new
                        {
                            Id = "2a602357-9e35-4ed2-bfbc-3b0f5e12711f",
                            ConcurrencyStamp = "f7f96646-7fd2-43be-9303-e6dc5e3bbabf",
                            Name = "Bedroom One",
                            NormalizedName = "BEDROOM ONE"
                        },
                        new
                        {
                            Id = "864bf846-c768-490c-93be-e1fcdd4170dd",
                            ConcurrencyStamp = "0a16edc0-69ac-4468-bdaa-85be632b5d1c",
                            Name = "Bedroom Two",
                            NormalizedName = "BEDROOM TWO"
                        },
                        new
                        {
                            Id = "133543c4-a29b-451a-b523-73e01dc6eabf",
                            ConcurrencyStamp = "50be69ca-f7b8-4664-9160-0e0e976e5c54",
                            Name = "Bedroom Three",
                            NormalizedName = "BEDROOM THREE"
                        },
                        new
                        {
                            Id = "7c86824a-0b7c-48a6-894e-646c67fe8af3",
                            ConcurrencyStamp = "9c2fc070-0ca5-436f-b74d-99d83fcc4154",
                            Name = "Living Room",
                            NormalizedName = "LIVING ROOM"
                        },
                        new
                        {
                            Id = "c7d70bff-ad21-4875-adc2-cb48eed8f9b2",
                            ConcurrencyStamp = "cb71a660-136c-4e67-ad0c-6ca9db65b45a",
                            Name = "Dining Room",
                            NormalizedName = "DINING ROOM"
                        },
                        new
                        {
                            Id = "9edf75c5-f2cd-401e-8137-de7cd73f0348",
                            ConcurrencyStamp = "5f453357-7dcd-4449-86b7-24a5f6a01121",
                            Name = "Storage Room",
                            NormalizedName = "STORAGE ROOM"
                        },
                        new
                        {
                            Id = "02f51724-f598-4c82-8735-79c890c60f2a",
                            ConcurrencyStamp = "c2410240-662c-4146-a96f-2c753379cbca",
                            Name = "Office Room",
                            NormalizedName = "OFFICE ROOM"
                        },
                        new
                        {
                            Id = "2c824d27-18b2-4e5d-8d74-ae82ff7615ca",
                            ConcurrencyStamp = "91ba3e9d-eb9d-4c80-9c14-253cd1f8c088",
                            Name = "Garage",
                            NormalizedName = "GARAGE"
                        },
                        new
                        {
                            Id = "5c3734dc-ec07-40ae-8da1-d0d134bd1cf5",
                            ConcurrencyStamp = "7f22cca4-0246-4886-a775-d67392f59654",
                            Name = "Garden",
                            NormalizedName = "GARDEN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "04ff9086-8225-424a-8620-ef1a58ae853c"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "60f49c54-5108-4bc1-963c-2534383a8401"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "e3108378-4aa3-4bd0-87f7-854c67b723ec"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "2a602357-9e35-4ed2-bfbc-3b0f5e12711f"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "864bf846-c768-490c-93be-e1fcdd4170dd"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "133543c4-a29b-451a-b523-73e01dc6eabf"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "7c86824a-0b7c-48a6-894e-646c67fe8af3"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "c7d70bff-ad21-4875-adc2-cb48eed8f9b2"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "9edf75c5-f2cd-401e-8137-de7cd73f0348"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "02f51724-f598-4c82-8735-79c890c60f2a"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "2c824d27-18b2-4e5d-8d74-ae82ff7615ca"
                        },
                        new
                        {
                            UserId = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            RoleId = "5c3734dc-ec07-40ae-8da1-d0d134bd1cf5"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "04ff9086-8225-424a-8620-ef1a58ae853c"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "60f49c54-5108-4bc1-963c-2534383a8401"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "e3108378-4aa3-4bd0-87f7-854c67b723ec"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "2a602357-9e35-4ed2-bfbc-3b0f5e12711f"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "864bf846-c768-490c-93be-e1fcdd4170dd"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "133543c4-a29b-451a-b523-73e01dc6eabf"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "7c86824a-0b7c-48a6-894e-646c67fe8af3"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "c7d70bff-ad21-4875-adc2-cb48eed8f9b2"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "9edf75c5-f2cd-401e-8137-de7cd73f0348"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "2c824d27-18b2-4e5d-8d74-ae82ff7615ca"
                        },
                        new
                        {
                            UserId = "117368c9-da90-417b-815a-55a3891c9672",
                            RoleId = "5c3734dc-ec07-40ae-8da1-d0d134bd1cf5"
                        },
                        new
                        {
                            UserId = "4878fbf1-18ae-4b64-a34b-c60c0d825a9c",
                            RoleId = "e3108378-4aa3-4bd0-87f7-854c67b723ec"
                        },
                        new
                        {
                            UserId = "4878fbf1-18ae-4b64-a34b-c60c0d825a9c",
                            RoleId = "864bf846-c768-490c-93be-e1fcdd4170dd"
                        },
                        new
                        {
                            UserId = "4878fbf1-18ae-4b64-a34b-c60c0d825a9c",
                            RoleId = "c7d70bff-ad21-4875-adc2-cb48eed8f9b2"
                        },
                        new
                        {
                            UserId = "984c0481-ae7e-4845-96d1-8da01f96f878",
                            RoleId = "e3108378-4aa3-4bd0-87f7-854c67b723ec"
                        },
                        new
                        {
                            UserId = "984c0481-ae7e-4845-96d1-8da01f96f878",
                            RoleId = "864bf846-c768-490c-93be-e1fcdd4170dd"
                        },
                        new
                        {
                            UserId = "984c0481-ae7e-4845-96d1-8da01f96f878",
                            RoleId = "c7d70bff-ad21-4875-adc2-cb48eed8f9b2"
                        },
                        new
                        {
                            UserId = "a47e6b88-2629-4d08-b4e3-f44aa61b455d",
                            RoleId = "e3108378-4aa3-4bd0-87f7-854c67b723ec"
                        },
                        new
                        {
                            UserId = "a47e6b88-2629-4d08-b4e3-f44aa61b455d",
                            RoleId = "133543c4-a29b-451a-b523-73e01dc6eabf"
                        },
                        new
                        {
                            UserId = "a47e6b88-2629-4d08-b4e3-f44aa61b455d",
                            RoleId = "c7d70bff-ad21-4875-adc2-cb48eed8f9b2"
                        },
                        new
                        {
                            UserId = "a47e6b88-2629-4d08-b4e3-f44aa61b455d",
                            RoleId = "2c824d27-18b2-4e5d-8d74-ae82ff7615ca"
                        },
                        new
                        {
                            UserId = "a47e6b88-2629-4d08-b4e3-f44aa61b455d",
                            RoleId = "5c3734dc-ec07-40ae-8da1-d0d134bd1cf5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SmartHome.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "84a7cf74-1232-41cb-af9c-952593cd7089",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "90d625e3-e70e-4b3c-b9eb-7a03e83f2aaf",
                            Email = "ali_ahmed@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ali",
                            LastName = "Ahmed",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALI_AHMED@GMAIL.COM",
                            NormalizedUserName = "ALI_AHMED@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJgHQKa8ILz/d4c2h9F0eBq1RCC6N/0q5FaMoWOsc/txaY64AhhH5y0yhdL5xphIJg==",
                            PhoneNumber = "01017080058",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3935b08-af74-4712-985b-c9c10166bee7",
                            TwoFactorEnabled = false,
                            UserImageURL = "../images/profile/1.png",
                            UserName = "Ali_Ahmed@gmail.com"
                        },
                        new
                        {
                            Id = "117368c9-da90-417b-815a-55a3891c9672",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c4cc5eec-38b5-464d-9a18-3479b40c5b21",
                            Email = "mona_mohamed@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Mona",
                            LastName = "Mohamed",
                            LockoutEnabled = false,
                            NormalizedEmail = "MONA_MOHAMED@YAHOO.COM",
                            NormalizedUserName = "MONA_MOHAMED@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJJTCsMOPRgi8Zj+SKy1Cir3boKi0aoB8oWJaT5mQy9z/KWLgtZpc7dMXmF2zvphxg==",
                            PhoneNumber = "01017180069",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1fe3e1d7-c86e-4fe9-a383-6221f901fc19",
                            TwoFactorEnabled = false,
                            UserImageURL = "../images/profile/2.png",
                            UserName = "mona_mohamed@yahoo.com"
                        },
                        new
                        {
                            Id = "4878fbf1-18ae-4b64-a34b-c60c0d825a9c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a0f0083e-6fb7-448a-8f65-9a60cb5b536d",
                            Email = "mohamed_ali@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mohamed",
                            LastName = "Ali",
                            LockoutEnabled = false,
                            NormalizedEmail = "MOHAMED_ALI@GMAIL.COM",
                            NormalizedUserName = "MOHAMED_ALI@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFgVcFn3tdPSOO38kukRnUK0qLaYzh93Dyl8EJ9CCUzXuMwu+VjwpjS4I3YMyJuj2Q==",
                            PhoneNumber = "01068289043",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "487f00d6-2009-43ad-91ce-7e8df8ac9d4e",
                            TwoFactorEnabled = false,
                            UserImageURL = "../images/profile/3.png",
                            UserName = "mohamed_ali@gmail.com"
                        },
                        new
                        {
                            Id = "984c0481-ae7e-4845-96d1-8da01f96f878",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "91cf969e-2358-48cb-a227-da7e2a86cb54",
                            Email = "mai_ali@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mai",
                            LastName = "Ali",
                            LockoutEnabled = false,
                            NormalizedEmail = "MAI_ALI@GMAIL.COM",
                            NormalizedUserName = "MAI_ALI@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGgvDb8jSB93ClOHHQ+nC4l4Vc7kdeKs643TiqilX/2yTWYpvv3C+zJaqMFjGFzx2Q==",
                            PhoneNumber = "01068289043",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f640f386-03b0-4ce1-bb54-4f68b09f6a99",
                            TwoFactorEnabled = false,
                            UserImageURL = "../images/profile/4.png",
                            UserName = "mai_ali@gmail.com"
                        },
                        new
                        {
                            Id = "a47e6b88-2629-4d08-b4e3-f44aa61b455d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d4b12f6e-4348-41cc-a653-4a84c3114485",
                            Email = "ahmed_ibrahim@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Ahmed",
                            LastName = "Ibrahim",
                            LockoutEnabled = false,
                            NormalizedEmail = "AHMED_IBRAHIM@YAHOO.COM",
                            NormalizedUserName = "AHMED_IBRAHIM@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFaA5ZLU4o1i+BuslzenuRFHtCn4fdCAMZ41yYPBewwup3fvCgwi7TTgzAppJSzT8w==",
                            PhoneNumber = "01068289043",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0231fbaa-70d9-4d7a-b349-085e0fb40260",
                            TwoFactorEnabled = false,
                            UserImageURL = "../images/profile/5.png",
                            UserName = "ahmed_ibrahim@yahoo.com"
                        });
                });

            modelBuilder.Entity("SmartHome.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceName = "Home Security",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeviceName = "Home Door",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 3,
                            DeviceName = "Fire System",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 4,
                            DeviceName = "Smoke System",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 5,
                            DeviceName = "Outdoor Light",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 6,
                            DeviceName = "Temperature",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 7,
                            DeviceName = "Humidity",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 8,
                            DeviceName = "TV",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 9,
                            DeviceName = "Door",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 10,
                            DeviceName = "Sound",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 11,
                            DeviceName = "Light",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 12,
                            DeviceName = "AC",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 13,
                            DeviceName = "TV",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 14,
                            DeviceName = "Door",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 15,
                            DeviceName = "Sound",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 16,
                            DeviceName = "Light",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 17,
                            DeviceName = "AC",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 18,
                            DeviceName = "TV",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 19,
                            DeviceName = "Door",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 20,
                            DeviceName = "Sound",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 21,
                            DeviceName = "Light",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 22,
                            DeviceName = "Ac",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 23,
                            DeviceName = "TV",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 24,
                            DeviceName = "Door",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 25,
                            DeviceName = "Sound",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 26,
                            DeviceName = "Light",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 27,
                            DeviceName = "AC",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 28,
                            DeviceName = "Sound",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 29,
                            DeviceName = "Light",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 30,
                            DeviceName = "AC",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 31,
                            DeviceName = "Light",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 32,
                            DeviceName = "Door",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 33,
                            DeviceName = "TV",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 34,
                            DeviceName = "Door",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 35,
                            DeviceName = "Sound",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 36,
                            DeviceName = "Light",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 37,
                            DeviceName = "AC",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 38,
                            DeviceName = "Garage Security",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 39,
                            DeviceName = "Left Parking",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 40,
                            DeviceName = "Right Parking",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 41,
                            DeviceName = "Garage Door",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 42,
                            DeviceName = "Garage Light",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 43,
                            DeviceName = "Water Tank",
                            RoomId = 10
                        },
                        new
                        {
                            Id = 44,
                            DeviceName = "Irrigation System",
                            RoomId = 10
                        });
                });

            modelBuilder.Entity("SmartHome.Models.Devices_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Devices_Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceId = 1,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            DeviceId = 2,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            DeviceId = 3,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            DeviceId = 4,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            DeviceId = 5,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            DeviceId = 6,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 31
                        },
                        new
                        {
                            Id = 7,
                            DeviceId = 7,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 10
                        },
                        new
                        {
                            Id = 8,
                            DeviceId = 8,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            DeviceId = 9,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            DeviceId = 10,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 50
                        },
                        new
                        {
                            Id = 11,
                            DeviceId = 11,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 90
                        },
                        new
                        {
                            Id = 12,
                            DeviceId = 12,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 22
                        },
                        new
                        {
                            Id = 13,
                            DeviceId = 13,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            DeviceId = 14,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            DeviceId = 15,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 40
                        },
                        new
                        {
                            Id = 16,
                            DeviceId = 16,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 50
                        },
                        new
                        {
                            Id = 17,
                            DeviceId = 17,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 20
                        },
                        new
                        {
                            Id = 18,
                            DeviceId = 18,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            DeviceId = 19,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            DeviceId = 20,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 20
                        },
                        new
                        {
                            Id = 21,
                            DeviceId = 21,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 25
                        },
                        new
                        {
                            Id = 22,
                            DeviceId = 22,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 18
                        },
                        new
                        {
                            Id = 23,
                            DeviceId = 23,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            DeviceId = 24,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            DeviceId = 25,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 70
                        },
                        new
                        {
                            Id = 26,
                            DeviceId = 26,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 80
                        },
                        new
                        {
                            Id = 27,
                            DeviceId = 27,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 25
                        },
                        new
                        {
                            Id = 28,
                            DeviceId = 28,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 20
                        },
                        new
                        {
                            Id = 29,
                            DeviceId = 29,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 90
                        },
                        new
                        {
                            Id = 30,
                            DeviceId = 30,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 20
                        },
                        new
                        {
                            Id = 31,
                            DeviceId = 31,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            DeviceId = 32,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 33,
                            DeviceId = 33,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 34,
                            DeviceId = 34,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 35,
                            DeviceId = 35,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 10
                        },
                        new
                        {
                            Id = 36,
                            DeviceId = 36,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 15
                        },
                        new
                        {
                            Id = 37,
                            DeviceId = 37,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 20
                        },
                        new
                        {
                            Id = 38,
                            DeviceId = 38,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 39,
                            DeviceId = 39,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            DeviceId = 40,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 41,
                            DeviceId = 41,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 42,
                            DeviceId = 42,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 43,
                            DeviceId = 43,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 50
                        },
                        new
                        {
                            Id = 44,
                            DeviceId = 44,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 90
                        });
                });

            modelBuilder.Entity("SmartHome.Models.HomeUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "In Home",
                            Email = "ali_ahmed@gmail.com",
                            FirstName = "Ali",
                            LastName = "Ahmed",
                            PhoneNumber = "01017080058",
                            UserImageURL = "../images/profile/1.png"
                        },
                        new
                        {
                            Id = 2,
                            Address = "In Home",
                            Email = "mona_mohamed@yahoo.com",
                            FirstName = "Mona",
                            LastName = "Mohamed",
                            PhoneNumber = "01017180069",
                            UserImageURL = "../images/profile/2.png"
                        },
                        new
                        {
                            Id = 3,
                            Address = "In Home",
                            Email = "mohamed_ali@gmail.com",
                            FirstName = "Mohamed",
                            LastName = "Ali",
                            PhoneNumber = "01017189052",
                            UserImageURL = "../images/profile/3.png"
                        },
                        new
                        {
                            Id = 4,
                            Address = "In Home",
                            Email = "mai_ali@gmail.com",
                            FirstName = "Mai",
                            LastName = "Ali",
                            PhoneNumber = "01069189080",
                            UserImageURL = "../images/profile/4.png"
                        },
                        new
                        {
                            Id = 5,
                            Address = "In Home",
                            Email = "ahmed_ibrahim@yahoo.com",
                            FirstName = "Ahmed",
                            LastName = "Ibrahim",
                            PhoneNumber = "01068289043",
                            UserImageURL = "../images/profile/5.png"
                        },
                        new
                        {
                            Id = 6,
                            Address = "90 Ain-shams - Cairo,Egypt",
                            Email = "marwa_saad@gmail.com",
                            FirstName = "Marwa",
                            LastName = "Saad",
                            PhoneNumber = "01268468933",
                            UserImageURL = "../images/profile/6.png"
                        },
                        new
                        {
                            Id = 7,
                            Address = "50 Ain-shams - Cairo,Egypt",
                            Email = "mona_Kamel@gmail.com",
                            FirstName = "Nada",
                            LastName = "Helmy",
                            PhoneNumber = "01168237594",
                            UserImageURL = "../images/profile/7.png"
                        });
                });

            modelBuilder.Entity("SmartHome.Models.HomeUser_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HomeUserId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StatusDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HomeUserId");

                    b.ToTable("HomeUser_Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HomeUserId = 1,
                            Status = true,
                            StatusDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            HomeUserId = 2,
                            Status = true,
                            StatusDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            HomeUserId = 3,
                            Status = true,
                            StatusDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            HomeUserId = 4,
                            Status = false,
                            StatusDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            HomeUserId = 5,
                            Status = false,
                            StatusDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            HomeUserId = 6,
                            Status = false,
                            StatusDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            HomeUserId = 7,
                            Status = true,
                            StatusDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SmartHome.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceId = 1,
                            IsRead = true,
                            NotificationBody = "The House is Safe Now",
                            NotificationDate = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            NotificationHeader = "Home Security",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            DeviceId = 3,
                            IsRead = true,
                            NotificationBody = "There is no Fire in House",
                            NotificationDate = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            NotificationHeader = "Fire System",
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            DeviceId = 4,
                            IsRead = true,
                            NotificationBody = "There is no Smoke in House",
                            NotificationDate = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            NotificationHeader = "Smoke System",
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            DeviceId = 32,
                            IsRead = true,
                            NotificationBody = "The Garage is Safe Now",
                            NotificationDate = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            NotificationHeader = "Garage Security",
                            Status = false
                        });
                });

            modelBuilder.Entity("SmartHome.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomName = "Main Systems"
                        },
                        new
                        {
                            Id = 2,
                            RoomName = "Bedroom 1"
                        },
                        new
                        {
                            Id = 3,
                            RoomName = "Bedroom 2"
                        },
                        new
                        {
                            Id = 4,
                            RoomName = "Bedroom 3"
                        },
                        new
                        {
                            Id = 5,
                            RoomName = "Leaving Room"
                        },
                        new
                        {
                            Id = 6,
                            RoomName = "Dining Room"
                        },
                        new
                        {
                            Id = 7,
                            RoomName = "Storage Room"
                        },
                        new
                        {
                            Id = 8,
                            RoomName = "Office Room"
                        },
                        new
                        {
                            Id = 9,
                            RoomName = "Garage"
                        },
                        new
                        {
                            Id = 10,
                            RoomName = "Garden"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartHome.Models.Device", b =>
                {
                    b.HasOne("SmartHome.Models.Room", "Room")
                        .WithMany("Devices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SmartHome.Models.Devices_Status", b =>
                {
                    b.HasOne("SmartHome.Models.Device", "Device")
                        .WithMany("DevicesStatus")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartHome.Models.HomeUser_Status", b =>
                {
                    b.HasOne("SmartHome.Models.HomeUser", "HomeUser")
                        .WithMany("UserHomeLogs")
                        .HasForeignKey("HomeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeUser");
                });

            modelBuilder.Entity("SmartHome.Models.Notification", b =>
                {
                    b.HasOne("SmartHome.Models.Device", "Device")
                        .WithMany("Notification")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartHome.Models.Device", b =>
                {
                    b.Navigation("DevicesStatus");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("SmartHome.Models.HomeUser", b =>
                {
                    b.Navigation("UserHomeLogs");
                });

            modelBuilder.Entity("SmartHome.Models.Room", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
