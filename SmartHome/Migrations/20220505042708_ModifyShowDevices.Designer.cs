// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHome.Data;

namespace SmartHome.Migrations
{
    [DbContext(typeof(SmartHomeContext))]
    [Migration("20220505042708_ModifyShowDevices")]
    partial class ModifyShowDevices
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SmartHome.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SmartHome.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceName = "Home Security",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeviceName = "Open Door",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 3,
                            DeviceName = "Fire System",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 4,
                            DeviceName = "Smoke System",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 5,
                            DeviceName = "Outdoor Light",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 6,
                            DeviceName = "Temperature",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 7,
                            DeviceName = "Humidity",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 8,
                            DeviceName = "TV",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 9,
                            DeviceName = "AC",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 10,
                            DeviceName = "Sound",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 11,
                            DeviceName = "Light",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 12,
                            DeviceName = "Door",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 13,
                            DeviceName = "TV",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 14,
                            DeviceName = "AC",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 15,
                            DeviceName = "Sound",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 16,
                            DeviceName = "Light",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 17,
                            DeviceName = "Door",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 18,
                            DeviceName = "TV",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 19,
                            DeviceName = "AC",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 20,
                            DeviceName = "Sound",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 21,
                            DeviceName = "Light",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 22,
                            DeviceName = "AC",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 23,
                            DeviceName = "Sound",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 24,
                            DeviceName = "Light",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 25,
                            DeviceName = "Light",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 26,
                            DeviceName = "Door",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 27,
                            DeviceName = "TV",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 28,
                            DeviceName = "AC",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 29,
                            DeviceName = "Sound",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 30,
                            DeviceName = "Light",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 31,
                            DeviceName = "Door",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 32,
                            DeviceName = "Garage Security",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 33,
                            DeviceName = "Garage Door",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 34,
                            DeviceName = "Left Parking",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 35,
                            DeviceName = "Right Parking",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 36,
                            DeviceName = "Garage Light",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 37,
                            DeviceName = "Water Tank",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 38,
                            DeviceName = "Irrigation System",
                            RoomId = 9
                        });
                });

            modelBuilder.Entity("SmartHome.Models.Devices_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Devices_Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceId = 1,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            DeviceId = 2,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            DeviceId = 3,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            DeviceId = 4,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            DeviceId = 5,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            DeviceId = 6,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 31
                        },
                        new
                        {
                            Id = 7,
                            DeviceId = 7,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 10
                        },
                        new
                        {
                            Id = 8,
                            DeviceId = 8,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            DeviceId = 9,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            DeviceId = 10,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            DeviceId = 11,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            DeviceId = 12,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            DeviceId = 13,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            DeviceId = 14,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            DeviceId = 15,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            DeviceId = 16,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            DeviceId = 17,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            DeviceId = 18,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            DeviceId = 19,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            DeviceId = 20,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            DeviceId = 21,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            DeviceId = 22,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            DeviceId = 23,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            DeviceId = 24,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            DeviceId = 25,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            DeviceId = 26,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            DeviceId = 27,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            DeviceId = 28,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 29,
                            DeviceId = 29,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 30,
                            DeviceId = 30,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            DeviceId = 31,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            DeviceId = 32,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 33,
                            DeviceId = 33,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 34,
                            DeviceId = 34,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 35,
                            DeviceId = 35,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 36,
                            DeviceId = 36,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 37,
                            DeviceId = 37,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 50
                        },
                        new
                        {
                            Id = 38,
                            DeviceId = 38,
                            ModifyDateTime = new DateTime(2022, 3, 2, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            Status = 90
                        });
                });

            modelBuilder.Entity("SmartHome.Models.HomeUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("HomeUsers");
                });

            modelBuilder.Entity("SmartHome.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomName = "Main Systems"
                        },
                        new
                        {
                            Id = 2,
                            RoomName = "Bedroom 1"
                        },
                        new
                        {
                            Id = 3,
                            RoomName = "Bedroom 2"
                        },
                        new
                        {
                            Id = 4,
                            RoomName = "Leaving Room"
                        },
                        new
                        {
                            Id = 5,
                            RoomName = "Dining Room"
                        },
                        new
                        {
                            Id = 6,
                            RoomName = "Storage Room"
                        },
                        new
                        {
                            Id = 7,
                            RoomName = "Office Room"
                        },
                        new
                        {
                            Id = 8,
                            RoomName = "Garage"
                        },
                        new
                        {
                            Id = 9,
                            RoomName = "Garden"
                        });
                });

            modelBuilder.Entity("SmartHome.Models.Show_Devices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("Show_Devices");
                });

            modelBuilder.Entity("SmartHome.Models.UserHome_Logs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HomeUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HomeUserId");

                    b.ToTable("UserHome_Logs");
                });

            modelBuilder.Entity("SmartHome.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users_Types");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartHome.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartHome.Models.Device", b =>
                {
                    b.HasOne("SmartHome.Models.Room", "Room")
                        .WithMany("Devices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SmartHome.Models.Devices_Status", b =>
                {
                    b.HasOne("SmartHome.Models.Device", "Device")
                        .WithMany("DevicesStatus")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartHome.Models.HomeUser", b =>
                {
                    b.HasOne("SmartHome.Models.UserType", "UserType")
                        .WithMany("HomeUsers")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("SmartHome.Models.Show_Devices", b =>
                {
                    b.HasOne("SmartHome.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHome.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Models.UserHome_Logs", b =>
                {
                    b.HasOne("SmartHome.Models.HomeUser", "HomeUser")
                        .WithMany("UserLogs")
                        .HasForeignKey("HomeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeUser");
                });

            modelBuilder.Entity("SmartHome.Models.Device", b =>
                {
                    b.Navigation("DevicesStatus");
                });

            modelBuilder.Entity("SmartHome.Models.HomeUser", b =>
                {
                    b.Navigation("UserLogs");
                });

            modelBuilder.Entity("SmartHome.Models.Room", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("SmartHome.Models.UserType", b =>
                {
                    b.Navigation("HomeUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
